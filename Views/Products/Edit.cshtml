@using Sklepix.Models.ViewModels
@model ProductEditVm
@{
    ViewData["Title"] = "Edit product";
}

<a asp-action="Index" class="btn btn-primary float-start">
    <span>Go back</span>
</a>

<form asp-action="Edit" style="width:50%;height:50%;margin-left:25%;">
    <h2>Edit product: @Model.Name</h2>
    <br />
    <input asp-for="Id" type="hidden" />
    <div class="form-group">
        <label asp-for="Name">
            <span>Product name</span>
        </label>
        <input asp-for="Name" class="form-control" placeholder="Product name..." value="@Model.Name" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <br />
    <div class="form-group">
        <label asp-for="Count">
            <span>Count</span>
        </label>
        <input asp-for="Count" type="number" step="1" class="form-control" placeholder="Count..." value="@Model.Count" />
        <span asp-validation-for="Count" class="text-danger"></span>
    </div>
    <br />
    <div class="form-group">
        <label asp-for="Price">
            <span>Price</span>
        </label>
        <input asp-for="Price" type="number" step="0.01" class="form-control" placeholder="Price..." value="@Model.Price" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>
    <br />
    <div class="form-group">
        <label asp-for="Margin">
            <span>Margin</span>
        </label>
        <input asp-for="Margin" type="number" step="0.01" class="form-control" placeholder="Margin..." value="@Model.Margin" />
        <span asp-validation-for="Margin" class="text-danger"></span>
    </div>
    <br />
    <div class="form-group">
        <label asp-for="CategoryName">
            <span>Category</span>
        </label>
        <select asp-for="CategoryName" class="form-control">
            @foreach(string categoryName in Model.CategoriesNames)
            {
                <option value="@categoryName">@categoryName</option>
            }
        </select>
        <span asp-validation-for="CategoryName" class="text-danger"></span>
    </div>
    <br />
    <div class="form-group">
        <label asp-for="AisleNames">
            <span>Aisle</span>
        </label>
        <select asp-for="AisleName" id="aisle-select" class="form-select">
            @foreach (string aisleName in Model.AisleNames)
            {
                <option value="@aisleName">@aisleName</option>
            }
        </select>
        <span asp-validation-for="AisleName" class="text-danger"></span>
    </div>
    <div class="form-group" id="row-group">
        <br />
        <label asp-for="Row">
            <span>Aisle row</span>
        </label>
        <select asp-for="Row" id="row-select" class="form-select">
        </select>
        <span asp-validation-for="Row" class="text-danger"></span>
    </div>
    <br />
    <div class="form-group">
        <label asp-for="Description">
            <span>Product description</span>
        </label>
        <textarea asp-for="Description" class="form-control" placeholder="Product description..." value="@Model.Description"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <br />
    <input type="submit" class="form-control btn btn-success" value="Edit product" />
</form>

<script>

    let rowList = {};
    @{
        foreach (var row in Model.AisleRows)
        {
            string list = "[";
            foreach (int v in row.Value)
            {
                list += v + ",";
            }
            list += "]";
            @:rowList['@Html.Raw(@row.Key)'] = @list;
        }
    }

    const aisleElement = document.getElementById("aisle-select");
    const rowElement = document.getElementById("row-select");
    const rowGroup = document.getElementById("row-group");

    function change() {
        rowElement.innerHTML = "";
        var str = "";
        rowGroup.style.display = "block";
        if(rowList[aisleElement.value].length > 0) {
            for(var i = 0; i < rowList[aisleElement.value].length; i++) {
                str += "<option value='" + rowList[aisleElement.value][i] + "'>" + rowList[aisleElement.value][i] + "</option>";
            }
            rowElement.innerHTML = str;
        } else {
            rowGroup.style.display = "none";
        }
    }

    change();
    aisleElement.addEventListener("change", () => {
        change();
    });

</script>
